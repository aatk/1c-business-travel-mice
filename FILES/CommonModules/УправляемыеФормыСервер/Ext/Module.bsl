
/// Процедуры Формы
Функция ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка, ДополнительноеДействие) Экспорт
	Возврат МаркетПлейсВызовСервера.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка, ДополнительноеДействие);
КонецФункции

Функция ОбработкаПроверкиЗаполненияНаСервере(ЭтаФорма, Отказ, ПроверяемыеРеквизиты, ДополнительноеДействие) Экспорт
	Возврат МаркетПлейсВызовСервера.ОбработкаПроверкиЗаполненияНаСервере(ЭтаФорма, Отказ, ПроверяемыеРеквизиты, ДополнительноеДействие);
КонецФункции

Функция ПриСохраненииДанныхВНастройкахНаСервере(ЭтаФорма, Настройки, ДополнительноеДействие) Экспорт
	Возврат МаркетПлейсВызовСервера.ПриСохраненииДанныхВНастройкахНаСервере(ЭтаФорма, Настройки, ДополнительноеДействие);
КонецФункции

Функция ПередЗагрузкойДанныхИзНастроекНаСервере(ЭтаФорма, Настройки, ДополнительноеДействие) Экспорт
	Возврат МаркетПлейсВызовСервера.ПередЗагрузкойДанныхИзНастроекНаСервере(ЭтаФорма, Настройки, ДополнительноеДействие);
КонецФункции

Функция ПриЗагрузкеДанныхИзНастроекНаСервере(ЭтаФорма, Настройки, ДополнительноеДействие) Экспорт
	Возврат МаркетПлейсВызовСервера.ПриЗагрузкеДанныхИзНастроекНаСервере(ЭтаФорма, Настройки, ДополнительноеДействие);
КонецФункции


// Процедуры формы объекта
Функция ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект, ДополнительноеДействие) Экспорт
	Возврат МаркетПлейсВызовСервера.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект, ДополнительноеДействие);
КонецФункции

Функция ПередЗаписьюНаСервере(ЭтаФорма, Отказ, ТекущийОбъект, ПараметрыЗаписи, ДополнительноеДействие) Экспорт
	Возврат МаркетПлейсВызовСервера.ПередЗаписьюНаСервере(ЭтаФорма, Отказ, ТекущийОбъект, ПараметрыЗаписи, ДополнительноеДействие);
КонецФункции

Функция ПриЗаписиНаСервере(ЭтаФорма, Отказ, ТекущийОбъект, ПараметрыЗаписи, ДополнительноеДействие) Экспорт
	Возврат МаркетПлейсВызовСервера.ПриЗаписиНаСервере(ЭтаФорма, Отказ, ТекущийОбъект, ПараметрыЗаписи, ДополнительноеДействие);
КонецФункции

Функция ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи, ДополнительноеДействие) Экспорт
	Возврат МаркетПлейсВызовСервера.ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи, ДополнительноеДействие);
КонецФункции




Процедура ДобавитьКомандуНаФорму(НоваяКоманда, ЭтаФорма, Подменю)
	
	УИ = СтрЗаменить(НоваяКоманда.Ссылка.УникальныйИдентификатор(), "-", "_");
	Идентификатор = "БТ_"+УИ+"_"+НоваяКоманда.ИмяКоманды;
	
	НоваяКомандаФормы = ЭтаФорма.Команды.Добавить(Идентификатор);
    НоваяКомандаФормы.Действие = "Подключаемый_ВыполнитьКоманду";
    НоваяКомандаФормы.Заголовок = НоваяКоманда.ПредставлениеКоманды;    
	
	НоваяКнопка = ЭтаФорма.Элементы.Добавить(Идентификатор, Тип("КнопкаФормы"), Подменю);
    НоваяКнопка.Заголовок = НоваяКоманда.ПредставлениеКоманды;    
	НоваяКнопка.ИмяКоманды = Идентификатор;
	
КонецПроцедуры

Процедура ДобавитьКомандуОтчетаНаФорму(НоваяКоманда, ЭтаФорма, Подменю)
	
	УИ = СтрЗаменить(НоваяКоманда.Ссылка.УникальныйИдентификатор(), "-", "_");
	Идентификатор = "АТ_"+УИ+"_"+НоваяКоманда.ИмяКоманды;
	
	НоваяКомандаФормы = ЭтаФорма.Команды.Добавить(Идентификатор);
    НоваяКомандаФормы.Действие = "Подключаемый_ВыполнитьКоманду";
    НоваяКомандаФормы.Заголовок = НоваяКоманда.ПредставлениеКоманды;    
	
	НоваяКнопка = ЭтаФорма.Элементы.Добавить(Идентификатор, Тип("КнопкаФормы"), Подменю);
    НоваяКнопка.Заголовок = НоваяКоманда.ПредставлениеКоманды;    
	НоваяКнопка.ИмяКоманды = Идентификатор;
	
КонецПроцедуры

Процедура ДобавитьКомандуВводНаОснованииНаФорму(НоваяКоманда, ЭтаФорма, Подменю)
	
	УИ = НРег(СтрЗаменить(УправлениеБТВызовСервера.MD5ХешСтрока(НоваяКоманда.Представление), " ", "")); //СтрЗаменить(Строка(Новый УникальныйИдентификатор()), "-", "_"); //НоваяКоманда.Ссылка.УникальныйИдентификатор()
	Идентификатор = "ВО_"+УИ+"_"+СтрЗаменить(НоваяКоманда.Идентификатор, ".", "_");
	
	НоваяКомандаФормы = ЭтаФорма.Команды.Добавить(Идентификатор);
    НоваяКомандаФормы.Действие = "Подключаемый_ВыполнитьКоманду";
    НоваяКомандаФормы.Заголовок = НоваяКоманда.Представление;    
	
	НоваяКнопка = ЭтаФорма.Элементы.Добавить(Идентификатор, Тип("КнопкаФормы"), Подменю);
    НоваяКнопка.Заголовок = НоваяКоманда.Представление;    
	НоваяКнопка.ИмяКоманды = Идентификатор;
	
КонецПроцедуры


Процедура ПриСозданииНаСервереПодменю(ИмяМодуля, ЭтаФорма, Подменю) Экспорт
			
	Если ИмяМодуля = "УправлениеПечатью" Тогда
		//Добавим печатные формы
		РазделеннаяСтрока = СтрРазделить(ЭтаФорма.ИмяФормы, ".");
		ИмяОбъекта = РазделеннаяСтрока[0]+"."+РазделеннаяСтрока[1];
		Команды = Справочники.ДополнительныеОтчетыИПечатныеФормы.ПолучитьКомандыПоОбъекту(ИмяОбъекта);
		
		Если Команды.Количество()>0 Тогда
			Для Каждого НоваяКоманда ИЗ Команды Цикл 
				ДобавитьКомандуНаФорму(НоваяКоманда, ЭтаФорма, Подменю);
			КонецЦикла;
		КонецЕсли;
	ИначеЕсли ИмяМодуля = "МенюОтчеты" Тогда 
		//Добавим отчеты
		РазделеннаяСтрока = СтрРазделить(ЭтаФорма.ИмяФормы, ".");
		ИмяОбъекта = РазделеннаяСтрока[0]+"."+РазделеннаяСтрока[1];
		Команды = Справочники.ДополнительныеОтчетыИПечатныеФормы.ПолучитьКомандыПоОбъекту(ИмяОбъекта, ".erf");
		
		Если Команды.Количество()>0 Тогда
			Для Каждого НоваяКоманда ИЗ Команды Цикл 
				ДобавитьКомандуОтчетаНаФорму(НоваяКоманда, ЭтаФорма, Подменю);
			КонецЦикла;
		КонецЕсли;
	ИначеЕсли ИмяМодуля = "ВводНаОсновании" Тогда 
		//Добавим отчеты
		РазделеннаяСтрока = СтрРазделить(ЭтаФорма.ИмяФормы, ".");
		ИмяОбъекта = РазделеннаяСтрока[0]+"."+РазделеннаяСтрока[1];
		
		//МетаОбъект = Метаданные.НайтиПоПолномуИмени(ИмяОбъекта);
		ПолноеИмя = СтрЗаменить(ИмяОбъекта, "Справочник.", "Справочники."); 
		ПолноеИмя = СтрЗаменить(ИмяОбъекта, "Документ.", "Документы."); 
		МенеджерОбъекта = Вычислить(ПолноеИмя);

		КомандыСоздатьНаОсновании = Новый ТаблицаЗначений;
		КомандыСоздатьНаОсновании.Колонки.Добавить("Идентификатор");
		КомандыСоздатьНаОсновании.Колонки.Добавить("Менеджер");
		КомандыСоздатьНаОсновании.Колонки.Добавить("Представление");
		КомандыСоздатьНаОсновании.Колонки.Добавить("РежимЗаписи");
		КомандыСоздатьНаОсновании.Колонки.Добавить("МножественныйВыбор");
		КомандыСоздатьНаОсновании.Колонки.Добавить("Обработчик");
		
		МенеджерОбъекта.ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании);
		
		Если КомандыСоздатьНаОсновании.Количество()>0 Тогда
			Для Каждого НоваяКоманда ИЗ КомандыСоздатьНаОсновании Цикл 
				ДобавитьКомандуВводНаОснованииНаФорму(НоваяКоманда, ЭтаФорма, Подменю);
			КонецЦикла;
		КонецЕсли;
	Иначе
		
		//В УТ плохо работает - надо выпиливать, остатки от УТ в БТ
		Модуль = Неопределено;
		Попытка
			Выполнить("Модуль = "+ИмяМодуля);
			Модуль.ПриСозданииНаСервере(ЭтаФорма, Подменю);
		Исключение
			//	
		КонецПопытки
		
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ПриСозданииНаСервереМодуль(ИмяМодуля, ЭтаФорма, Отказ, СтандартнаяОбработка) Экспорт
	
	Модуль = Неопределено;
	Попытка
		Выполнить("Модуль = "+ИмяМодуля);
		Модуль.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	Исключение
		//	
	КонецПопытки
	
КонецПроцедуры

Процедура ПриСозданииНаСервереФорма(ИмяМодуля, ЭтаФорма) Экспорт
	
	Модуль = Неопределено;
	Попытка
		Выполнить("Модуль = "+ИмяМодуля);
		Модуль.ПриСозданииНаСервере(ЭтаФорма);
	Исключение
		//	
	КонецПопытки
	
КонецПроцедуры



//   МОДУЛЬ ФОРМЫ ДОКУМЕНТА
Процедура ВыполнитьНазначаемуюКомандуНаСервере(ИмяМодуля, ЭтаФорма, ИмяЭлемента, РезультатВыполнения) Экспорт
	
	//ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтаФорма, ИмяЭлемента, РезультатВыполнения);
	Модуль = Неопределено;
	Попытка
		Выполнить("Модуль = "+ ИмяМодуля);
		Модуль.ВыполнитьНазначаемуюКомандуНаСервере(ЭтаФорма, ИмяЭлемента, РезультатВыполнения);
	Исключение
		//	
	КонецПопытки
	
КонецПроцедуры


// Модуль документов
Процедура ОбработкаЗаполнения(ИмяМодуля, ЭтотОбъект, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	
	Модуль = Неопределено;
	Попытка
		Выполнить("Модуль = "+ ИмяМодуля);
		Модуль.ОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, СтандартнаяОбработка);
	Исключение
		//	
	КонецПопытки
	
КонецПроцедуры







Процедура ВыполнитьКоманду(ЭтотОбъект, Контекст, Список, Результат) Экспорт
	Модуль = Неопределено;
	ИмяМодуля = "ПодключаемыеКоманды";
	Попытка
		Выполнить("Модуль = "+ ИмяМодуля);
		Модуль.ВыполнитьКоманду(ЭтотОбъект, Контекст, Список, Результат);
	Исключение
		//	
	КонецПопытки
КонецПроцедуры

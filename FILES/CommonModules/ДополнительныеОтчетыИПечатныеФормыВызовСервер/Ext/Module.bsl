
Функция ПодготовитьКоллекциюПечатныхФорм(Знач ИменаМакетов) Экспорт
	
	Макеты = Новый ТаблицаЗначений;
	Макеты.Колонки.Добавить("ИмяМакета");
	Макеты.Колонки.Добавить("ИмяВРЕГ");
	Макеты.Колонки.Добавить("СинонимМакета");
	Макеты.Колонки.Добавить("ТабличныйДокумент");
	Макеты.Колонки.Добавить("Экземпляров");
	Макеты.Колонки.Добавить("Картинка");
	Макеты.Колонки.Добавить("ПолныйПутьКМакету");
	Макеты.Колонки.Добавить("ИмяФайлаПечатнойФормы");
	Макеты.Колонки.Добавить("ОфисныеДокументы");
	
	Если ТипЗнч(ИменаМакетов) = Тип("Строка") Тогда
		ИменаМакетов = СтрРазделить(ИменаМакетов, ",");
	КонецЕсли;
	
	Для Каждого ИмяМакета Из ИменаМакетов Цикл
		Макет = Макеты.Найти(ИмяМакета, "ИмяМакета");
		Если Макет = Неопределено Тогда
			Макет = Макеты.Добавить();
			Макет.ИмяМакета = ИмяМакета;
			Макет.ИмяВРЕГ = ВРег(ИмяМакета);
			Макет.Экземпляров = 1;
		Иначе
			Макет.Экземпляров = Макет.Экземпляров + 1;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Макеты;
	
КонецФункции

Функция ТЗВМассив(ТаблицаЗ)
	
	Массив = Новый Массив;
	Для Каждого СтрокаТЗ ИЗ ТаблицаЗ Цикл	
		НоваяСтрока = Новый Структура; 
		Для Каждого КолонкаТЗ ИЗ ТаблицаЗ.Колонки Цикл
			НоваяСтрока.Вставить(КолонкаТЗ.Имя, СтрокаТЗ[КолонкаТЗ.Имя]); 
		КонецЦикла;		
		Массив.Добавить(НоваяСтрока);
	КонецЦикла;
	
	Возврат Массив; 
КонецФункции


Функция ВернутьОбработкуПоСсылке(СсылкаНаОбработку) Экспорт
	//Сделать нормальную функцию
	ВОбработка = Неопределено;
	Если ЗначениеЗаполнено(СсылкаНаОбработку.ДополнительныйФункционал) Тогда
		ДополнительныйФункционал = СсылкаНаОбработку.ДополнительныйФункционал; 
		Если ЗначениеЗаполнено(ДополнительныйФункционал.ПутьКФайлуОтладки) Тогда
			Если ДополнительныйФункционал.ТипДопФункционала = Перечисления.ТипыДополнительногоФункционала.КомпонентОтчета Тогда
				ВОбработка = ВнешниеОтчеты.Создать(ДополнительныйФункционал.ПутьКФайлуОтладки, Ложь);
			Иначе
				ВОбработка = ВнешниеОбработки.Создать(ДополнительныйФункционал.ПутьКФайлуОтладки, Ложь);
			КонецЕсли;			
		Иначе
			//НавигационнаяССылка = ПолучитьНавигационнуюСсылку(ДополнительныйФункционал, "ВнешняяОбработка");
			//ОбъектОписанияЗащиты = Новый ОписаниеЗащитыОтОпасныхДействий;
			//ОбъектОписанияЗащиты.ПредупреждатьОбОпасныхДействиях = Ложь;
			//УникальныйИдентификатор = СсылкаНаОбработку.УникальныйИдентификатор();
			//ИмяОбработки = ВнешниеОтчеты.Подключить(НавигационнаяССылка, Строка(УникальныйИдентификатор),Ложь,ОбъектОписанияЗащиты);
			//ВОбработка = ВнешниеОтчеты.Создать(ИмяОбработки);

			НавигационнаяССылка = ПолучитьНавигационнуюСсылку(ДополнительныйФункционал, "ВнешняяОбработка");
			ОбъектОписанияЗащиты = Новый ОписаниеЗащитыОтОпасныхДействий;
			ОбъектОписанияЗащиты.ПредупреждатьОбОпасныхДействиях = Ложь;
			УникальныйИдентификатор = СсылкаНаОбработку.УникальныйИдентификатор();
			
			Если ДополнительныйФункционал.ТипДопФункционала = Перечисления.ТипыДополнительногоФункционала.КомпонентОтчета Тогда
				ИмяОбработки = ВнешниеОтчеты.Подключить(НавигационнаяССылка, Строка(УникальныйИдентификатор),Ложь,ОбъектОписанияЗащиты);
				ВОбработка = ВнешниеОтчеты.Создать(ИмяОбработки);
			Иначе
				ИмяОбработки = ВнешниеОбработки.Подключить(НавигационнаяССылка,,Ложь,ОбъектОписанияЗащиты);
				ВОбработка = ВнешниеОбработки.Создать(ИмяОбработки);
			КонецЕсли;
			
		КонецЕсли;	
	Иначе
		НавигационнаяССылка = ПолучитьНавигационнуюСсылку(СсылкаНаОбработку, "ВнешняяОбработка");
		ОбъектОписанияЗащиты = Новый ОписаниеЗащитыОтОпасныхДействий;
		ОбъектОписанияЗащиты.ПредупреждатьОбОпасныхДействиях = Ложь;	
		Если СсылкаНаОбработку.Вид <> ".epf" Тогда
			ИмяОбработки = ВнешниеОтчеты.Подключить(НавигационнаяССылка,,Ложь,ОбъектОписанияЗащиты);
			ВОбработка = ВнешниеОтчеты.Создать(ИмяОбработки);
		Иначе
			ИмяОбработки = ВнешниеОбработки.Подключить(НавигационнаяССылка,,Ложь,ОбъектОписанияЗащиты);
			ВОбработка = ВнешниеОбработки.Создать(ИмяОбработки);			
		КонецЕсли;	
	КонецЕсли;
	
	Возврат ВОбработка;
КонецФункции

Функция ВыполнитьКоманду(Команда, Знач Источник) Экспорт
	
	Результат = Новый Структура("Результат", Ложь);
		
	УИ = СтрЗаменить(Сред(Команда.Имя,4,36), "_", "-");
	Идентификатор = Новый УникальныйИдентификатор(УИ);
	ИмяВнутреннейКоманды = Сред(Команда.Имя,41);
	
	СсылкаНаОбработку = Справочники.ДополнительныеОтчетыИПечатныеФормы.ПолучитьСсылку(Идентификатор);
	
	ВОбработка = Неопределено;
	Если ЗначениеЗаполнено(СсылкаНаОбработку.ДополнительныйФункционал) Тогда
		ДополнительныйФункционал = СсылкаНаОбработку.ДополнительныйФункционал; 
		Если ЗначениеЗаполнено(ДополнительныйФункционал.ПутьКФайлуОтладки) Тогда
			ВОбработка = ВнешниеОбработки.Создать(ДополнительныйФункционал.ПутьКФайлуОтладки, Ложь);
		Иначе
			НавигационнаяССылка = ПолучитьНавигационнуюСсылку(ДополнительныйФункционал, "ВнешняяОбработка");
			ОбъектОписанияЗащиты = Новый ОписаниеЗащитыОтОпасныхДействий;
			ОбъектОписанияЗащиты.ПредупреждатьОбОпасныхДействиях = Ложь;
			ИмяОбработки = ВнешниеОбработки.Подключить(НавигационнаяССылка,,Ложь,ОбъектОписанияЗащиты);
			ВОбработка = ВнешниеОбработки.Создать(ИмяОбработки);
		КонецЕсли;	
	Иначе
		НавигационнаяССылка = ПолучитьНавигационнуюСсылку(СсылкаНаОбработку, "ВнешняяОбработка");
		ОбъектОписанияЗащиты = Новый ОписаниеЗащитыОтОпасныхДействий;
		ОбъектОписанияЗащиты.ПредупреждатьОбОпасныхДействиях = Ложь;
		ИмяОбработки = ВнешниеОбработки.Подключить(НавигационнаяССылка, , Ложь, ОбъектОписанияЗащиты);
		ВОбработка = ВнешниеОбработки.Создать(ИмяОбработки);
	КонецЕсли; //Сказали, что никаких исключений. Должно работать с пользовательскими настройками
	
	Если ВОбработка <> Неопределено Тогда
		
		СразуНаПечать = Ложь;
		СтрокаСКомандой = СсылкаНаОбработку.СписокКоманд.Найти(ИмяВнутреннейКоманды, "ИмяКоманды");
		Если СтрокаСКомандой <> Неопределено Тогда
			СразуНаПечать = СтрокаСКомандой.СразуНаПечать;
			Если СтрокаСКомандой.ИмяИсходнойКоманды <> "" Тогда
				ИмяВнутреннейКоманды = СтрокаСКомандой.ИмяИсходнойКоманды;
			КонецЕсли;
		КонецЕсли;
		
		ПечатныеФормы = Новый Массив();
		ПечатныеФормы.Добавить(ИмяВнутреннейКоманды);
		КоллекцияПечатныхФорм = ПодготовитьКоллекциюПечатныхФорм(ПечатныеФормы);

		ОбъектыПечати = Неопределено;
		ПараметрыВывода = Новый Структура("СсылкаНаДополнительныеПечатныеФормы", СсылкаНаОбработку);
		ОбъектыДляПечати = Источник;
		
		ВОбработка.Печать(ОбъектыДляПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
		АдресВХ = ТЗВМассив(КоллекцияПечатныхФорм);
		
		Результат = Новый Структура("Результат, КоллекцияПечатныхФорм, ВнешняяОбработка, СразуНаПечать", Истина, АдресВХ, СсылкаНаОбработку, СразуНаПечать);
	КонецЕсли;

	Возврат Результат;
КонецФункции

Функция ВыполнитьКомандуОтчета(Команда, Знач Источник) Экспорт
	
	Результат = Новый Структура("Результат", Ложь);
		
	УИ = СтрЗаменить(Сред(Команда.Имя,4,36), "_", "-");
	Идентификатор = Новый УникальныйИдентификатор(УИ);
	ИмяВнутреннейКоманды = Сред(Команда.Имя,41);
	
	СсылкаНаОбработку = Справочники.ДополнительныеОтчетыИПечатныеФормы.ПолучитьСсылку(Идентификатор);
	
	ВОбработка = Неопределено;
	Если ЗначениеЗаполнено(СсылкаНаОбработку.ДополнительныйФункционал) Тогда
		ДополнительныйФункционал = СсылкаНаОбработку.ДополнительныйФункционал; 
		Если ЗначениеЗаполнено(ДополнительныйФункционал.ПутьКФайлуОтладки) Тогда
			ВОбработка = ВнешниеОтчеты.Создать(ДополнительныйФункционал.ПутьКФайлуОтладки, Ложь);
		Иначе
			НавигационнаяССылка = ПолучитьНавигационнуюСсылку(ДополнительныйФункционал, "ВнешняяОбработка");
			ОбъектОписанияЗащиты = Новый ОписаниеЗащитыОтОпасныхДействий;
			ОбъектОписанияЗащиты.ПредупреждатьОбОпасныхДействиях = Ложь;
			УникальныйИдентификатор = СсылкаНаОбработку.УникальныйИдентификатор();
			ИмяОбработки = ВнешниеОтчеты.Подключить(НавигационнаяССылка, Строка(УникальныйИдентификатор),Ложь,ОбъектОписанияЗащиты);
			ВОбработка = ВнешниеОтчеты.Создать(ИмяОбработки);
		КонецЕсли;	
	Иначе
		НавигационнаяССылка = ПолучитьНавигационнуюСсылку(СсылкаНаОбработку, "ВнешняяОбработка");
		ОбъектОписанияЗащиты = Новый ОписаниеЗащитыОтОпасныхДействий;
		ОбъектОписанияЗащиты.ПредупреждатьОбОпасныхДействиях = Ложь;	
		УникальныйИдентификатор = СсылкаНаОбработку.УникальныйИдентификатор();
		ИмяОбработки = ВнешниеОтчеты.Подключить(НавигационнаяССылка, Строка(УникальныйИдентификатор),Ложь,ОбъектОписанияЗащиты);
		ВОбработка = ВнешниеОтчеты.Создать(ИмяОбработки);
	КонецЕсли; //Сказали, что никаких исключений. Должно работать с пользовательскими настройками
	
	Если ВОбработка <> Неопределено Тогда
		
		АдресВХ = ИмяОбработки; //ПоместитьВоВременноеХранилище(ВОбработка);
		
		Результат = Новый Структура("Результат, Адрес", Истина, АдресВХ);
	КонецЕсли;

	Возврат Результат;
КонецФункции



Процедура ЗаполнитьПараметрыПоОбработке(Объект, СсылкаНаФайлВоВременномХранилище, Расширение) Экспорт
	
	ОбъектОписанияЗащиты = Новый ОписаниеЗащитыОтОпасныхДействий;
	ОбъектОписанияЗащиты.ПредупреждатьОбОпасныхДействиях = Ложь;
	
	Если Расширение = ".epf" Тогда
		ИмяОбработки = ВнешниеОбработки.Подключить(СсылкаНаФайлВоВременномХранилище,,Ложь, ОбъектОписанияЗащиты); 
		ВОбработка = ВнешниеОбработки.Создать(ИмяОбработки, Ложь);
	Иначе
		ИмяОбработки = ВнешниеОтчеты.Подключить(СсылкаНаФайлВоВременномХранилище, Строка(Новый УникальныйИдентификатор()), Ложь, ОбъектОписанияЗащиты);
		ВОбработка = ВнешниеОтчеты.Создать(ИмяОбработки);
	КонецЕсли;
	
	Сведения = ВОбработка.СведенияОВнешнейОбработке();
	
	Объект.СписокОбъектов.Очистить();	
	Объект.СписокКоманд.Очистить();	
	Если ТипЗнч(Сведения) = Тип("Структура") Тогда
		
		Объект.Вид = Расширение;
		
		Для Каждого Назначение ИЗ Сведения.Назначение Цикл
			НовыйОбъект = Объект.СписокОбъектов.Добавить();
			НовыйОбъект.ПутьКОбъектуМетаданных = Назначение; 
			НовыйОбъект.ПредставлениеОбъекта = Метаданные.НайтиПоПолномуИмени(Назначение).Представление();
		КонецЦикла;
		
		Для Каждого Команда ИЗ Сведения.Команды Цикл
			НоваяКоманда = Объект.СписокКоманд.Добавить();
			НоваяКоманда.ИмяКоманды = Команда.Идентификатор; 				
			НоваяКоманда.ПредставлениеКоманды = Команда.Представление; 				
			НоваяКоманда.Использовать = Истина; 				
		КонецЦикла;		
	Иначе
		Сообщить("Некорректное описание сделений по обработке!");
	КонецЕсли;
	
КонецПроцедуры

Функция ЕстьДонорскаяПечатнаяФорма() Экспорт
	Результат = ? (Метаданные.ОбщиеФормы.Найти("ПечатьДокументов") = Неопределено, Ложь, Истина);
	Возврат Результат;
КонецФункции


//// МАРКЕТПЛЕЙС ДЛЯ РАЗРАБОТЧКОВ КОТОРЫЕ ХОТЯТ ЗАРАБОТАТЬ

Функция ПриОткрытии(ЭтаФорма, Отказ, ДополнительноеДействие) Экспорт
	//	
	Результат = Ложь;
	СписокОбработчиков = МаркетПлейсПовтИспользованиеКлиент.ПолучитьСписокОбработчиков("ПриОткрытии", ЭтаФорма.ИмяФормы, ДополнительноеДействие);
	Для Каждого Обработчик ИЗ СписокОбработчиков Цикл
		Результат = Истина;
		ФормаОбработки = ПолучитьФорму("ВнешняяОбработка."+Обработчик.Обработка+".Форма."+Обработчик.Команда.Модуль);
	    Выполнить("ФормаОбработки."+Обработчик.Команда.Обработчик+"(ЭтаФорма, Отказ);");
	КонецЦикла;
	Возврат Результат;
	
КонецФункции

Функция ПриЗакрытии(ЭтаФорма, ЗавершениеРаботы = Ложь, ДополнительноеДействие) Экспорт
	Результат = Ложь;
	Если ЗавершениеРаботы = Неопределено ИЛИ НЕ ЗавершениеРаботы Тогда
		СписокОбработчиков = МаркетПлейсПовтИспользованиеКлиент.ПолучитьСписокОбработчиков("ПриЗакрытии", ЭтаФорма.ИмяФормы, ДополнительноеДействие);
		Для Каждого Обработчик ИЗ СписокОбработчиков Цикл
			Результат = Истина;
			ФормаОбработки = ПолучитьФорму("ВнешняяОбработка."+Обработчик.Обработка+".Форма."+Обработчик.Команда.Модуль);
		    Выполнить("ФормаОбработки."+Обработчик.Команда.Обработчик+"(ЭтаФорма, ЗавершениеРаботы);");
		КонецЦикла;
	КонецЕсли;
	Возврат Результат;
КонецФункции

Функция ПриПовторномОткрытии(ЭтаФорма, ДополнительноеДействие) Экспорт
	Результат = Ложь;
	СписокОбработчиков = МаркетПлейсПовтИспользованиеКлиент.ПолучитьСписокОбработчиков("ПриПовторномОткрытии", ЭтаФорма.ИмяФормы, ДополнительноеДействие);
	Для Каждого Обработчик ИЗ СписокОбработчиков Цикл
		Результат = Истина;
		ФормаОбработки = ПолучитьФорму("ВнешняяОбработка."+Обработчик.Обработка+".Форма."+Обработчик.Команда.Модуль);
	    Выполнить("ФормаОбработки."+Обработчик.Команда.Обработчик+"(ЭтаФорма);");
	КонецЦикла;
	Возврат Результат;
КонецФункции

Функция ПередЗакрытием(ЭтаФорма, Отказ, ЗавершениеРаботы = Ложь, ТекстПредупреждения = "", СтандартнаяОбработка, ДополнительноеДействие) Экспорт
	Результат = Ложь;
	Если ЗавершениеРаботы = Неопределено ИЛИ НЕ ЗавершениеРаботы Тогда
		СписокОбработчиков = МаркетПлейсПовтИспользованиеКлиент.ПолучитьСписокОбработчиков("ПередЗакрытием", ЭтаФорма.ИмяФормы, ДополнительноеДействие);
		Для Каждого Обработчик ИЗ СписокОбработчиков Цикл
			Результат = Истина;
			ФормаОбработки = ПолучитьФорму("ВнешняяОбработка."+Обработчик.Обработка+".Форма."+Обработчик.Команда.Модуль);
		    Выполнить("ФормаОбработки."+Обработчик.Команда.Обработчик+"(ЭтаФорма, Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка);");
		КонецЦикла;
	КонецЕсли;
	Возврат Результат;
КонецФункции

Функция ОбработкаВыбора(ЭтаФорма, ВыбранноеЗначение, ИсточникВыбора, ДополнительноеДействие) Экспорт
	СписокОбработчиков = МаркетПлейсПовтИспользованиеКлиент.ПолучитьСписокОбработчиков("ОбработкаВыбора", ЭтаФорма.ИмяФормы, ДополнительноеДействие);
	Для Каждого Обработчик ИЗ СписокОбработчиков Цикл
		Результат = Истина;
		ФормаОбработки = ПолучитьФорму("ВнешняяОбработка."+Обработчик.Обработка+".Форма."+Обработчик.Команда.Модуль);
	    Выполнить("ФормаОбработки."+Обработчик.Команда.Обработчик+"(ЭтаФорма, ВыбранноеЗначение, ИсточникВыбора);");
	КонецЦикла;
	Возврат Результат;
КонецФункции

Функция ОбработкаОповещения(ЭтаФорма, ИмяСобытия, Параметр, Источник, ДополнительноеДействие) Экспорт
	Результат = Ложь;
	СписокОбработчиков = МаркетПлейсПовтИспользованиеКлиент.ПолучитьСписокОбработчиков("ОбработкаОповещения", ЭтаФорма.ИмяФормы, ДополнительноеДействие);
	Для Каждого Обработчик ИЗ СписокОбработчиков Цикл
		Результат = Истина;
		ФормаОбработки = ПолучитьФорму("ВнешняяОбработка."+Обработчик.Обработка+".Форма."+Обработчик.Команда.Модуль);
	    Выполнить("ФормаОбработки."+Обработчик.Команда.Обработчик+"(ЭтаФорма, ИмяСобытия, Параметр, Источник);");
	КонецЦикла;
	Возврат Результат;
КонецФункции

Функция ОбработкаАктивизации(ЭтаФорма, АктивныйОбъект, Источник, ДополнительноеДействие) Экспорт
	Результат = Ложь;
	СписокОбработчиков = МаркетПлейсПовтИспользованиеКлиент.ПолучитьСписокОбработчиков("ОбработкаАктивизации", ЭтаФорма.ИмяФормы, ДополнительноеДействие);
	Для Каждого Обработчик ИЗ СписокОбработчиков Цикл
		Результат = Истина;
		ФормаОбработки = ПолучитьФорму("ВнешняяОбработка."+Обработчик.Обработка+".Форма."+Обработчик.Команда.Модуль);
	    Выполнить("ФормаОбработки."+Обработчик.Команда.Обработчик+"(ЭтаФорма, АктивныйОбъект, Источник);");
	КонецЦикла;
	Возврат Результат;
КонецФункции

Функция ОбработкаЗаписиНового(ЭтаФорма, НовыйОбъект, Источник, СтандартнаяОбработка, ДополнительноеДействие) Экспорт
	Результат = Ложь;
	СписокОбработчиков = МаркетПлейсПовтИспользованиеКлиент.ПолучитьСписокОбработчиков("ОбработкаЗаписиНового", ЭтаФорма.ИмяФормы, ДополнительноеДействие);
	Для Каждого Обработчик ИЗ СписокОбработчиков Цикл
		Результат = Истина;
		ФормаОбработки = ПолучитьФорму("ВнешняяОбработка."+Обработчик.Обработка+".Форма."+Обработчик.Команда.Модуль);
	    Выполнить("ФормаОбработки."+Обработчик.Команда.Обработчик+"(ЭтаФорма, НовыйОбъект, Источник, СтандартнаяОбработка);");
	КонецЦикла;
	Возврат Результат;
КонецФункции

Функция ВнешнееСобытие(ЭтаФорма, Источник, Событие, Данные, ДополнительноеДействие) Экспорт
	Результат = Ложь;
	СписокОбработчиков = МаркетПлейсПовтИспользованиеКлиент.ПолучитьСписокОбработчиков("ВнешнееСобытие", ЭтаФорма.ИмяФормы, ДополнительноеДействие);
	Для Каждого Обработчик ИЗ СписокОбработчиков Цикл
		Результат = Истина;
		ФормаОбработки = ПолучитьФорму("ВнешняяОбработка."+Обработчик.Обработка+".Форма."+Обработчик.Команда.Модуль);
	    Выполнить("ФормаОбработки."+Обработчик.Команда.Обработчик+"(ЭтаФорма, Источник, Событие, Данные);");
	КонецЦикла;
	Возврат Результат;
КонецФункции

Функция ОбработкаНавигационнойСсылки(ЭтаФорма, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка, ДополнительноеДействие) Экспорт
	Результат = Ложь;
	СписокОбработчиков = МаркетПлейсПовтИспользованиеКлиент.ПолучитьСписокОбработчиков("ОбработкаНавигационнойСсылки", ЭтаФорма.ИмяФормы, ДополнительноеДействие);
	Для Каждого Обработчик ИЗ СписокОбработчиков Цикл
		Результат = Истина;
		ФормаОбработки = ПолучитьФорму("ВнешняяОбработка."+Обработчик.Обработка+".Форма."+Обработчик.Команда.Модуль);
	    Выполнить("ФормаОбработки."+Обработчик.Команда.Обработчик+"(ЭтаФорма, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка);");
	КонецЦикла;
	Возврат Результат;
КонецФункции

Функция ОбработкаПерехода(ЭтаФорма, ОбъектПерехода, СтандартнаяОбработка, ДополнительноеДействие) Экспорт
	Результат = Ложь;
	СписокОбработчиков = МаркетПлейсПовтИспользованиеКлиент.ПолучитьСписокОбработчиков("ОбработкаПерехода", ЭтаФорма.ИмяФормы, ДополнительноеДействие);
	Для Каждого Обработчик ИЗ СписокОбработчиков Цикл
		Результат = Истина;
		ФормаОбработки = ПолучитьФорму("ВнешняяОбработка."+Обработчик.Обработка+".Форма."+Обработчик.Команда.Модуль);
	    Выполнить("ФормаОбработки."+Обработчик.Команда.Обработчик+"(ЭтаФорма, ОбъектПерехода, СтандартнаяОбработка);");
	КонецЦикла;
	Возврат Результат;
КонецФункции

Функция ПриИзмененииПараметровЭкрана(ЭтаФорма, ДополнительноеДействие) Экспорт
	Результат = Ложь;
	СписокОбработчиков = МаркетПлейсПовтИспользованиеКлиент.ПолучитьСписокОбработчиков("ПриИзмененииПараметровЭкрана", ЭтаФорма.ИмяФормы, ДополнительноеДействие);
	Для Каждого Обработчик ИЗ СписокОбработчиков Цикл
		Результат = Истина;
		ФормаОбработки = ПолучитьФорму("ВнешняяОбработка."+Обработчик.Обработка+".Форма."+Обработчик.Команда.Модуль);
	    Выполнить("ФормаОбработки."+Обработчик.Команда.Обработчик+"(ЭтаФорма);");
	КонецЦикла;
	Возврат Результат;
КонецФункции

// Процедуры объекта
Функция ПередЗаписью(ЭтаФорма, Отказ, ПараметрыЗаписи, ДополнительноеДействие) Экспорт
	Результат = Ложь;
	СписокОбработчиков = МаркетПлейсПовтИспользованиеКлиент.ПолучитьСписокОбработчиков("ПередЗаписью", ЭтаФорма.ИмяФормы, ДополнительноеДействие);
	Для Каждого Обработчик ИЗ СписокОбработчиков Цикл
		Результат = Истина;
		ФормаОбработки = ПолучитьФорму("ВнешняяОбработка."+Обработчик.Обработка+".Форма."+Обработчик.Команда.Модуль);
	    Выполнить("ФормаОбработки."+Обработчик.Команда.Обработчик+"(ЭтаФорма, Отказ, ПараметрыЗаписи);");
	КонецЦикла;
	Возврат Результат;
КонецФункции

Функция ПослеЗаписи(ЭтаФорма, ПараметрыЗаписи, ДополнительноеДействие) Экспорт
	Результат = Ложь;
	СписокОбработчиков = МаркетПлейсПовтИспользованиеКлиент.ПолучитьСписокОбработчиков("ПослеЗаписи", ЭтаФорма.ИмяФормы, ДополнительноеДействие);
	Для Каждого Обработчик ИЗ СписокОбработчиков Цикл
		Результат = Истина;
		ФормаОбработки = ПолучитьФорму("ВнешняяОбработка."+Обработчик.Обработка+".Форма."+Обработчик.Команда.Модуль);
	    Выполнить("ФормаОбработки."+Обработчик.Команда.Обработчик+"(ЭтаФорма, ПараметрыЗаписи);");
	КонецЦикла;
	Возврат Результат;
КонецФункции

Функция ВыборЗначения(ЭтаФорма, СтандартнаяОбработка, ДополнительноеДействие) Экспорт
	Результат = Ложь;
	СписокОбработчиков = МаркетПлейсПовтИспользованиеКлиент.ПолучитьСписокОбработчиков("ВыборЗначения", ЭтаФорма.ИмяФормы, ДополнительноеДействие);
	Для Каждого Обработчик ИЗ СписокОбработчиков Цикл
		Результат = Истина;
		ФормаОбработки = ПолучитьФорму("ВнешняяОбработка."+Обработчик.Обработка+".Форма."+Обработчик.Команда.Модуль);
	    Выполнить("ФормаОбработки."+Обработчик.Команда.Обработчик+"(ЭтаФорма, СтандартнаяОбработка);");
	КонецЦикла;
	Возврат Результат;
КонецФункции



Процедура ВыполнитьКоманду(ЭтотОбъект, Команда, Источник, ДополнительноеДействие) Экспорт
	
	СписокОбработчиков = МаркетПлейсПовтИспользованиеКлиент.ПолучитьСписокОбработчиков("ВыполнитьКоманду", ЭтотОбъект.ИмяФормы, ДополнительноеДействие);
	Для Каждого Обработчик ИЗ СписокОбработчиков Цикл
		ФормаОбработки = ПолучитьФорму("ВнешняяОбработка."+Обработчик.Обработка+".Форма."+Обработчик.Команда.Модуль);
	    Выполнить("ФормаОбработки."+Обработчик.Команда.Обработчик+"(ЭтотОбъект, Команда, Источник);");
	КонецЦикла;
	
КонецПроцедуры




Функция СформироватьСтрокуПараметров(Параметры, Префикс = "Параметры.")
	МассивПараметров = Новый Массив;
	Для Каждого Параметр ИЗ Параметры Цикл
		МассивПараметров.Добавить(Префикс+Параметр.Ключ);
	КонецЦикла;
	Возврат СтрСоединить(МассивПараметров, ",");	
КонецФункции                                                         


Функция Действие(ЭтаФорма, Параметры, ИмяДействия, ДополнительноеДействие) Экспорт
	
	Результат = Ложь;
	Элемент = Параметры["Элемент"];
	СписокОбработчиков = МаркетПлейсПовтИспользованиеКлиент.ПолучитьСписокОбработчиков("Действие"+ИмяДействия, ЭтаФорма.ИмяФормы, ДополнительноеДействие);
	Если СписокОбработчиков.Количество() >0 Тогда
		
		Если ДополнительноеДействие = "Конец" Тогда
			ОтветДействия = МаркетПлейсВызовСервера.ПолучитьДействиеПоУмолчанию(ЭтаФорма.ИмяФормы, Элемент.Имя, ИмяДействия);
			Если ЗначениеЗаполнено(ОтветДействия) Тогда 
				СтрокаПараметров = СформироватьСтрокуПараметров(Параметры);
				ДействиеСтрокой = ОтветДействия+"("+СтрокаПараметров+");";
				ЭтаФорма.ВыполняемсяНаКлиенте(ДействиеСтрокой, Параметры);	
			КонецЕсли;
		КонецЕсли;
		
		Для Каждого Обработчик ИЗ СписокОбработчиков Цикл
			Результат = Истина;
			ФормаОбработки = ПолучитьФорму("ВнешняяОбработка."+Обработчик.Обработка+".Форма."+Обработчик.Команда.Модуль);
			СтрокаПараметров = СформироватьСтрокуПараметров(Параметры);
		    Выполнить("ФормаОбработки."+Обработчик.Команда.Обработчик+"(ЭтаФорма, "+СтрокаПараметров+");");
		КонецЦикла;
		
		Если ДополнительноеДействие = "Начало" Тогда
			ОтветДействия = МаркетПлейсВызовСервера.ПолучитьДействиеПоУмолчанию(ЭтаФорма.ИмяФормы, Элемент.Имя, ИмяДействия);
			Если ЗначениеЗаполнено(ОтветДействия) Тогда 
				СтрокаПараметров = СформироватьСтрокуПараметров(Параметры);
				ДействиеСтрокой = ОтветДействия+"("+СтрокаПараметров+");";
				ЭтаФорма.ВыполняемсяНаКлиенте(ДействиеСтрокой, Параметры);	
			КонецЕсли;		
		КонецЕсли;

	КонецЕсли;
	
	Возврат Результат;
КонецФункции

Функция ДействиеОбработкаЗаписиНового(ЭтаФорма, НовыйОбъект, Источник, СтандартнаяОбработка, ДополнительноеДействие) Экспорт	
	//Пока не понятно как должно работать	
КонецФункции	


Процедура РасшаритьКомпонент(СсылкаНаКомпонент) Экспорт
	ПараметрыОткрытия = Новый Структура("СсылкаНаКомпонент", СсылкаНаКомпонент);
	ОткрытьФорму("Справочник.ДополнительныйФункционал.Форма.ФормаДоступа", ПараметрыОткрытия);
КонецПроцедуры

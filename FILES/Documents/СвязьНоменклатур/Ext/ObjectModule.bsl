
Процедура ПриЗаписи(Отказ)
	МодульОбъектаСервер.ПриЗаписи(ЭтотОбъект, Отказ, "Начало");
	//
	МодульОбъектаСервер.ПриЗаписи(ЭтотОбъект, Отказ, "Конец");
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)	
	МодульОбъектаСервер.ОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения, "Начало");
	//	
	Если НЕ МодульОбъектаСервер.ОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения, "Вместо") Тогда
		// регистр УникальныеИдентификаторы
		УправлениеБТСервер.ЗаписатьGUID(Ссылка);

		
		// регистр АктуальныйДокументСвязанныхНоменклатурБТ
		Движения.АктуальныйДокументСвязанныхНоменклатурБТ.Записывать = Истина;
		Движение = Движения.АктуальныйДокументСвязанныхНоменклатурБТ.Добавить();
		Движение.Партнер = ЭтотОбъект.Партнер;
		Движение.Контрагент = ЭтотОбъект.Контрагент;
		Движение.Договор = ЭтотОбъект.Договор;
		Движение.ОтношениеУчета = ЭтотОбъект.ОтношениеУчета;
		Движение.Период = ЭтотОбъект.Дата;
		
		
		// регистр СвязанныеНоменклатуры
		Движения.СвязанныеНоменклатуры.Записывать = Истина;
		Для Каждого ТекСтрокаСвязанныеНоменклатуры Из СвязанныеНоменклатуры Цикл
			Движение = Движения.СвязанныеНоменклатуры.Добавить();
			
			Движение.Период = Дата;
			Движение.Партнер = Партнер;
			Движение.НоменклатураБТ = ТекСтрокаСвязанныеНоменклатуры.ОсновнаяНоменклатура;
			Движение.Контрагенты = Контрагент;
			Движение.Договор = Договор;
			Движение.УсловиеСвязи = ТекСтрокаСвязанныеНоменклатуры.СвязаннаяНоменклатура;
			
			Если ТипЗнч(ТекСтрокаСвязанныеНоменклатуры.СвязаннаяНоменклатура) = Тип("СправочникСсылка.ЭлементСвязаннойНоменклатуры") Тогда
				Движение.НоменклатураПриемник = ТекСтрокаСвязанныеНоменклатуры.СвязаннаяНоменклатура.НоменклатураБТ;
			Иначе
				Движение.НоменклатураПриемник = ТекСтрокаСвязанныеНоменклатуры.НоменклатураПриемник; //Справочники.НоменклатураБТ.ПустаяСсылка();
			КонецЕсли;
			Движение.ФиксированнаяСумма = НЕ ТекСтрокаСвязанныеНоменклатуры.ЦенаВПроцентах;
			Движение.Цена = ТекСтрокаСвязанныеНоменклатуры.Цена;
			Движение.СтавкаНДС = ТекСтрокаСвязанныеНоменклатуры.СтавкаНДС;
			Движение.СуммаНДС = ТекСтрокаСвязанныеНоменклатуры.СуммаНДС;
			Движение.Сумма = ТекСтрокаСвязанныеНоменклатуры.Сумма;
			Движение.ОтношениеУчетаСвязанныхНоменклатур = ОтношениеУчета;
			Движение.ПрименяетсяК = ?(ТекСтрокаСвязанныеНоменклатуры.ПрименяетсяК = Неопределено, Справочники.ЭлементОтбора.ПустаяСсылка(), ТекСтрокаСвязанныеНоменклатуры.ПрименяетсяК);
			Движение.РеквизитУстановкиЦены = ТекСтрокаСвязанныеНоменклатуры.РеквизитУстановкиЦены;
			
			Движение.СворачиватьНаУслугуВладельца = ТекСтрокаСвязанныеНоменклатуры.СворачиватьНаУслугуВладельца;
			
			Движение.НеМенееЧем = ТекСтрокаСвязанныеНоменклатуры.НеМенееЧем;
			Движение.НеБолееЧем = ТекСтрокаСвязанныеНоменклатуры.НеБолееЧем;
			Движение.Обработчик = ТекСтрокаСвязанныеНоменклатуры.Обработчик;
			
			Движение.ШаблонСвязаннойУслуги = ТекСтрокаСвязанныеНоменклатуры.ШаблонСвязаннойУслуги;
		КонецЦикла;
	КонецЕсли;	
	
	МодульОбъектаСервер.ОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения, "Конец");
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	МодульОбъектаСервер.ОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка, "Начало");
	//
	МодульОбъектаСервер.ОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка, "Конец");
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	МодульОбъектаСервер.ОбработкаУдаленияПроведения(ЭтотОбъект, Отказ, "Начало");
	//	
	Если НЕ МодульОбъектаСервер.ОбработкаУдаленияПроведения(ЭтотОбъект, Отказ, "Вместо") Тогда
		//
		УправлениеБТСервер.УдалитьGUID(Ссылка);
	КонецЕсли;
	
	МодульОбъектаСервер.ОбработкаУдаленияПроведения(ЭтотОбъект, Отказ, "Конец");
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	МодульОбъектаСервер.ПередУдалением(ЭтотОбъект, Отказ, "Начало");
	//	
	МодульОбъектаСервер.ПередУдалением(ЭтотОбъект, Отказ, "Конец");
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	МодульОбъектаСервер.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения, "Начало");
	//	
	МодульОбъектаСервер.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения, "Конец");
КонецПроцедуры

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	МодульОбъектаСервер.ПриУстановкеНовогоНомера(ЭтотОбъект, СтандартнаяОбработка, Префикс, "Начало");
	// Вставить содержимое обработчика.
	МодульОбъектаСервер.ПриУстановкеНовогоНомера(ЭтотОбъект, СтандартнаяОбработка, Префикс, "Конец");
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	МодульОбъектаСервер.ПриКопировании(ЭтотОбъект, ОбъектКопирования, "Начало");
	// Вставить содержимое обработчика.
	МодульОбъектаСервер.ПриКопировании(ЭтотОбъект, ОбъектКопирования, "Конец");
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	МодульОбъектаСервер.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты, "Начало");
	// Вставить содержимое обработчика.
	МодульОбъектаСервер.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты, "Конец");
КонецПроцедуры

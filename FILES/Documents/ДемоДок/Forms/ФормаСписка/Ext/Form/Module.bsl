
#Область ТиповойФункционал

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправляемыеФормыКлиент.УПВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Элементы.Список);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	УправляемыеФормыКлиент.СФКВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуСоздатьНаОсновании(Команда)
	
	УправляемыеФормыКлиент.ВНОКВыполнитьПодключаемуюКомандуСоздатьНаОсновании(Команда, ЭтаФорма, Элементы.Список);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуОтчет(Команда)
	
	УправляемыеФормыКлиент.МОКВыполнитьПодключаемуюКомандуОтчет(Команда, ЭтаФорма, Элементы.Список);
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	//ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
	УправляемыеФормыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	//ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
	УправляемыеФормыСервер.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	//ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
	УправляемыеФормыКлиент.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти


// СЕРВЕР
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УправляемыеФормыСервер.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка, "Начало");
	
	// Обработчик подсистемы "Внешние обработки"
	УправляемыеФормыСервер.ПриСозданииНаСервереФорма("ДополнительныеОтчетыИОбработки", ЭтаФорма);
	УправляемыеФормыСервер.ПриСозданииНаСервереПодменю("УправлениеПечатью", ЭтаФорма, Элементы.ПодменюПечать);
	УправляемыеФормыСервер.ПриСозданииНаСервереПодменю("ВводНаОсновании", ЭтаФорма, Элементы.ПодменюСоздатьНаОсновании);
	УправляемыеФормыСервер.ПриСозданииНаСервереПодменю("МенюОтчеты", ЭтаФорма, Элементы.ПодменюОтчеты);
	//Конец типового функционала
				
	УправляемыеФормыСервер.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка, "Конец");
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	УправляемыеФормыСервер.ОбработкаПроверкиЗаполненияНаСервере(ЭтаФорма, Отказ, ПроверяемыеРеквизиты, "Начало");
	//Вставить содержимое обработчика
	УправляемыеФормыСервер.ОбработкаПроверкиЗаполненияНаСервере(ЭтаФорма, Отказ, ПроверяемыеРеквизиты, "Конец");
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	УправляемыеФормыСервер.ПриСохраненииДанныхВНастройкахНаСервере(ЭтаФорма, Настройки, "Начало");
	//Вставить содержимое обработчика
	УправляемыеФормыСервер.ПриСохраненииДанныхВНастройкахНаСервере(ЭтаФорма, Настройки, "Конец");
КонецПроцедуры

&НаСервере
Процедура ПередЗагрузкойДанныхИзНастроекНаСервере(Настройки)
	УправляемыеФормыСервер.ПередЗагрузкойДанныхИзНастроекНаСервере(ЭтаФорма, Настройки, "Начало");
	//Вставить содержимое обработчика
	УправляемыеФормыСервер.ПередЗагрузкойДанныхИзНастроекНаСервере(ЭтаФорма, Настройки, "Конец");
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	УправляемыеФормыСервер.ПриЗагрузкеДанныхИзНастроекНаСервере(ЭтаФорма, Настройки, "Начало");
	//Вставить содержимое обработчика
	УправляемыеФормыСервер.ПриЗагрузкеДанныхИзНастроекНаСервере(ЭтаФорма, Настройки, "Конец");
КонецПроцедуры




// КЛИЕНТ
&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	УправляемыеФормыКлиент.ПриЗакрытии(ЭтаФорма, ЗавершениеРаботы, "Начало");	
	//Вставить содержимое обработчика
	УправляемыеФормыКлиент.ПриЗакрытии(ЭтаФорма, ЗавершениеРаботы, "Конец");	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УправляемыеФормыКлиент.ПриОткрытии(ЭтаФорма, Отказ, "Начало");	
	//Вставить содержимое обработчика
	УправляемыеФормыКлиент.ПриОткрытии(ЭтаФорма, Отказ, "Конец");	
КонецПроцедуры

&НаКлиенте
Процедура ПриПовторномОткрытии()
	УправляемыеФормыКлиент.ПриПовторномОткрытии(ЭтаФорма, "Начало");	
	//Вставить содержимое обработчика
	УправляемыеФормыКлиент.ПриПовторномОткрытии(ЭтаФорма, "Конец");	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	УправляемыеФормыКлиент.ПередЗакрытием(ЭтаФорма, Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка, "Начало");	
	//Вставить содержимое обработчика
	УправляемыеФормыКлиент.ПередЗакрытием(ЭтаФорма, Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка, "Конец");	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	УправляемыеФормыКлиент.ОбработкаВыбора(ЭтаФорма, ВыбранноеЗначение, ИсточникВыбора, "Начало");	
	//Вставить содержимое обработчика
	УправляемыеФормыКлиент.ОбработкаВыбора(ЭтаФорма, ВыбранноеЗначение, ИсточникВыбора, "Конец");	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	УправляемыеФормыКлиент.ОбработкаОповещения(ЭтаФорма, ИмяСобытия, Параметр, Источник, "Начало");	
	//Вставить содержимое обработчика
	УправляемыеФормыКлиент.ОбработкаОповещения(ЭтаФорма, ИмяСобытия, Параметр, Источник, "Конец");	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаАктивизации(АктивныйОбъект, Источник)
	УправляемыеФормыКлиент.ОбработкаАктивизации(ЭтаФорма, АктивныйОбъект, Источник, "Начало");	
	//Вставить содержимое обработчика
	УправляемыеФормыКлиент.ОбработкаАктивизации(ЭтаФорма, АктивныйОбъект, Источник, "Конец");	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	УправляемыеФормыКлиент.ОбработкаЗаписиНового(ЭтаФорма, НовыйОбъект, Источник, СтандартнаяОбработка, "Начало");	
	//Вставить содержимое обработчика
	УправляемыеФормыКлиент.ОбработкаЗаписиНового(ЭтаФорма, НовыйОбъект, Источник, СтандартнаяОбработка, "Конец");	
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	УправляемыеФормыКлиент.ВнешнееСобытие(ЭтаФорма, Источник, Событие, Данные, "Начало");	
	//Вставить содержимое обработчика
	УправляемыеФормыКлиент.ВнешнееСобытие(ЭтаФорма, Источник, Событие, Данные, "Конец");	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаНавигационнойСсылки(НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	УправляемыеФормыКлиент.ОбработкаНавигационнойСсылки(ЭтаФорма, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка, "Начало");	
	//Вставить содержимое обработчика
	УправляемыеФормыКлиент.ОбработкаНавигационнойСсылки(ЭтаФорма, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка, "Конец");	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаПерехода(ОбъектПерехода, СтандартнаяОбработка)
	УправляемыеФормыКлиент.ОбработкаПерехода(ЭтаФорма, ОбъектПерехода, СтандартнаяОбработка, "Начало");	
	//Вставить содержимое обработчика
	УправляемыеФормыКлиент.ОбработкаПерехода(ЭтаФорма, ОбъектПерехода, СтандартнаяОбработка, "Конец");	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииПараметровЭкрана()
	УправляемыеФормыКлиент.ПриИзмененииПараметровЭкрана(ЭтаФорма, "Начало");	
	//Вставить содержимое обработчика
	УправляемыеФормыКлиент.ПриИзмененииПараметровЭкрана(ЭтаФорма, "Конец");	
КонецПроцедуры



&НаКлиенте
Функция ВыполняемсяНаКлиенте(Действие, Параметры = Неопределено) Экспорт
	Результат = Неопределено;
	Выполнить(Действие);
	Возврат Результат;	
КонецФункции
&НаСервере
Функция ВыполняемсяНаСервере(Действие, Параметры = Неопределено) Экспорт
	Результат = Неопределено;
	Выполнить(Действие);
	Возврат Результат;	
КонецФункции

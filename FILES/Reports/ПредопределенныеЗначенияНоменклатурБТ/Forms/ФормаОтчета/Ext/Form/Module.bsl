
&НаКлиенте
Процедура Сформировать(Команда)
	ОчиститьСообщения();
	СформироватьОтчет();
	Результат.ОтображатьСетку = Истина;
КонецПроцедуры

&НаСервере
Процедура СформироватьОтчет()
	
	//Если НЕ ПроверитьЗаполнение() Тогда
	//	Возврат;
	//КонецЕсли;
		
	УстановитьПривилегированныйРежим(Истина);
	
	Макет = РеквизитФормыВЗначение("Отчет").ПолучитьМакет("Макет");
	Результат.Очистить();
	
	Область = Макет.ПолучитьОбласть("Шапка|Основное");
	Результат.Вывести(Область);
	
	Область = Макет.ПолучитьОбласть("Детали|Основное"); 
	ОбластьХ = Макет.ПолучитьОбласть("Детали|Характеристика");
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВЫРАЗИТЬ("""" КАК СТРОКА(250)) КАК УникальныйИдентификатор,
	               |	НоменклатураБТ.Ссылка КАК Ссылка,
	               |	НоменклатураБТ.Наименование КАК Наименование,
	               |	НоменклатураБТ.Номенклатура КАК Номенклатура,
	               |	НоменклатураБТ.ИспользуетсяВМаршруте КАК ИспользуетсяВМаршруте,
	               |	НоменклатураБТ.СистемнаяНоменклатура КАК СистемнаяНоменклатура,
	               |	ВЫРАЗИТЬ("""" КАК СТРОКА(250)) КАК Характеристика,
	               |	ВЫРАЗИТЬ("""" КАК СТРОКА(250)) КАК Значение,
	               |	НоменклатураБТХарактеристики.Характеристика КАК ХарактеристикаСсылка,
	               |	НоменклатураБТХарактеристики.Характеристика.Наименование КАК ХарактеристикаНаименование,
	               |	НоменклатураБТХарактеристики.ХранитьИсторию КАК ХранитьИсторию,
	               |	НоменклатураБТХарактеристики.НеОтображать КАК НеОтображать,
	               |	НоменклатураБТХарактеристики.ОбязательноеЗаполнение КАК ОбязательноеЗаполнение,
	               |	НоменклатураБТХарактеристики.ЭмитироватьСправочник КАК ЭмитироватьСправочник
	               |ИЗ
	               |	Справочник.НоменклатураБТ КАК НоменклатураБТ
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НоменклатураБТ.Характеристики КАК НоменклатураБТХарактеристики
	               |		ПО (НоменклатураБТХарактеристики.Ссылка = НоменклатураБТ.Ссылка)
	               |ГДЕ
	               |	НЕ НоменклатураБТ.ПометкаУдаления
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Наименование,
	               |	Характеристика
	               |ИТОГИ ПО
	               |	Ссылка
	               |АВТОУПОРЯДОЧИВАНИЕ";
	//Таблица = Запрос.Выполнить().Выгрузить();
	ВыборкаШапка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	//Для Каждого ТекСтрока Из Таблица Цикл  
	Пока ВыборкаШапка.Следующий() Цикл
		//ВыборкаШапка.УникальныйИдентификатор = XMLСтрока(ВыборкаШапка.Ссылка);
		//вывод по строкам
		ЗаполнитьЗначенияСвойств(Область.Параметры, ВыборкаШапка.Ссылка);
		Область.Параметры.УникальныйИдентификатор =  XMLСтрока(ВыборкаШапка.Ссылка);
		Результат.Вывести(Область);
		
		ВыборкаДетали = ВыборкаШапка.Выбрать();
		Пока ВыборкаДетали.Следующий() Цикл  
			//вывод по колонкам
			МассивJson = Новый Массив;
			Структура = Новый Структура("Характеристика, ХранитьИсторию, НеОтображать, ОбязательноеЗаполнение, ЭмитироватьСправочник", 
				ВыборкаДетали.ХарактеристикаНаименование, 
				ВыборкаДетали.ХранитьИсторию, 
				ВыборкаДетали.НеОтображать, 
				ВыборкаДетали.ОбязательноеЗаполнение, 
				ВыборкаДетали.ЭмитироватьСправочник);
			МассивJson.Добавить(Структура);
			Попытка
				ОбластьХ.Параметры.Характеристика = СтрЗаменить(СтрЗаменить(УправлениеБТВызовСервера.ВJSON(МассивJson),"[",""),"]","");
				Результат.Присоединить(ОбластьХ);
			Исключение
			КонецПопытки;
			//Попытка
			//	ВыборкаДетали.Характеристика = СтрЗаменить(СтрЗаменить(УправлениеБТВызовСервера.ВJSON(МассивJson),"[",""),"]","");
			//	ВыборкаДетали.Значение = СтрЗаменить(СтрЗаменить(УправлениеБТВызовСервера.ВJSON(МассивJson),"[",""),"]","");
			//Исключение
			//	ВыборкаДетали.Характеристика = "";
			//	ВыборкаДетали.Значение = "";
			//КонецПопытки;
		КонецЦикла;
		
	КонецЦикла;
	
	Элементы.Результат.ОтображениеСостояния.Видимость = ложь; 
	Элементы.Результат.ОтображениеСостояния.ДополнительныйРежимОтображения = ДополнительныйРежимОтображения.НеИспользовать;
		
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//Элементы.Результат.ОтображениеСостояния.Видимость = ложь; 
	//Элементы.Результат.ОтображениеСостояния.ДополнительныйРежимОтображения = ДополнительныйРежимОтображения.НеИспользовать;
КонецПроцедуры



&НаСервере
Процедура ЗапуститьНаСервере()
	ПараметрыЗапроса = Новый Структура("ВыхДанные, Пользователь, Пароль", "ПолучитьТелоКакСтроку", Объект.СерверШины.Логин, Объект.СерверШины.Пароль);
	РезультатРаботыЗапроса = УправлениеБТВызовСервера.ОтправитьЗапросВШину(Объект.СерверШины.URL, Объект.НастрокаЗагрузки.RESTЗапрос+"/getinfo/v3"+?(Объект.РежимОтладки, "/debug", ""), Объект.ИсходныйФайл, ПараметрыЗапроса); 
	Если РезультатРаботыЗапроса.Результат Тогда
		Если НЕ Объект.РежимОтладки Тогда
			ВСтруктуру = УправлениеБТВызовСервера.ПолучитьНастройкуСистемы(ПланыВидовХарактеристик.НаборХарактеристикСистемный.ЗагружатьВСоответствие);
			СтруктураJSON = УправлениеБТВызовСервера.ИзJSON(РезультатРаботыЗапроса.ВхОбъект, НЕ ВСтруктуру);
			СтрокаОбработанная = УправлениеБТВызовСервера.ВJSON(СтруктураJSON);
			СтрокаОбработанная = УправлениеБТВызовСервера.ДобавитьТабыВJSON(СтрокаОбработанная);
		Иначе
			СтрокаОбработанная = РезультатРаботыЗапроса.ВхОбъект;
		КонецЕсли;		
		РезультатРаботы.УстановитьТекст(СтрокаОбработанная);
	Иначе
		РезультатРаботы.УстановитьТекст("Ошибка запроса!!!"+Символы.ПС+РезультатРаботыЗапроса.ВхОбъект);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Запустить(Команда)
	ЗапуститьНаСервере();
КонецПроцедуры

&НаСервере
Процедура НастрокаЗагрузкиПриИзмененииНаСервере()
	Объект.СерверШины = Объект.НастрокаЗагрузки.СерверШины;
КонецПроцедуры

&НаКлиенте
Процедура НастрокаЗагрузкиПриИзменении(Элемент)
	НастрокаЗагрузкиПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЭтаФорма.Параметры.Свойство("ИсходныйФайл", Объект.ИсходныйФайл);
	ЭтаФорма.Параметры.Свойство("НастрокаЗагрузки", Объект.НастрокаЗагрузки);
	ЭтаФорма.Параметры.Свойство("СерверШины", Объект.СерверШины);
КонецПроцедуры




&НаСервере
Процедура ЗагрузитьНаСервере()
	
	ВхОбъект = Объект.ИсходныйФайл;
	Результат = УправлениеБТВызовСервера.ЗагрузитьДанныеВУслугу(ВхОбъект, Неопределено, Объект.НастрокаЗагрузки);
	Если Результат.Результат Тогда
		Для Каждого УслугаОбъект ИЗ Результат.Объекты Цикл
			Сообщить(УслугаОбъект);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Загрузить(Команда)
	ЗагрузитьНаСервере();
КонецПроцедуры



&НаСервере
Функция ПолучитьJSONУслугиДляНастройкиНаСервере()
	
	Результат = Новый Структура();	

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	ФайлыДляОтправкиВОблако.Период КАК Период,
	               |	ФайлыДляОтправкиВОблако.GUID КАК GUID,
	               |	ФайлыДляОтправкиВОблако.Объект КАК Объект,
	               |	ФайлыДляОтправкиВОблако.ИмяФайла КАК ИмяФайла,
	               |	ФайлыДляОтправкиВОблако.Отправлено КАК Отправлено,
	               |	ФайлыДляОтправкиВОблако.ДД КАК ДД,
	               |	ФайлыДляОтправкиВОблако.md5 КАК md5,
	               |	ФайлыДляОтправкиВОблако.ТипВложения КАК ТипВложения,
	               |	ФайлыДляОтправкиВОблако.URL КАК URL
	               |ИЗ
	               |	РегистрСведений.ФайлыДляОтправкиВОблако КАК ФайлыДляОтправкиВОблако
	               |ГДЕ
	               |	ФайлыДляОтправкиВОблако.Объект = &Объект
	               |	И ФайлыДляОтправкиВОблако.ТипВложения = &ТипВложения
	               |	И ФайлыДляОтправкиВОблако.ИмяФайла = &ИмяФайла
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Период УБЫВ";
	Запрос.УстановитьПараметр("Объект", Услуга);
	Запрос.УстановитьПараметр("ТипВложения", Перечисления.ТипыВложенныхФайлов.Системный);
	Запрос.УстановитьПараметр("ИмяФайла", "json_v3_element.file");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		РезультатДД = УправлениеБТВызовСервера.ПолучитьФайлИзОблака(Выборка.md5);
		
		HttpБуфер = Новый HTTPЗапрос;
		HttpБуфер.УстановитьТелоИзДвоичныхДанных(РезультатДД);
		РезультатСтрокой = HttpБуфер.ПолучитьТелоКакСтроку();
			
		РезультатСоответствие = УправлениеБТВызовСервера.ИзJSON(РезультатСтрокой, Ложь);
		//РезультатСоответствие = Результат["jsonv3"]["services"][0];
		
		Результат = РезультатСоответствие["jsonv3"]["services"][0];
	КонецЕсли;
	
	Возврат Результат; 
			
КонецФункции


&НаСервере
Процедура ПолучитьJSONДляНастройкиНаСервере()
	
	СтруктураУслуги = Новый Структура();
	ИсхМассивУслуг = Новый Структура();	
	
	СтруктураУслуги = ПолучитьJSONУслугиДляНастройкиНаСервере();
	
	ПараметрыЗапроса = Новый Структура("ВыхДанные, Пользователь, Пароль", "ПолучитьТелоКакСтроку", Объект.СерверШины.Логин, Объект.СерверШины.Пароль);
	РезультатРаботыЗапроса = УправлениеБТВызовСервера.ОтправитьЗапросВШину(Объект.СерверШины.URL, Объект.НастрокаЗагрузки.RESTЗапрос+"/getinfo/v3", Объект.ИсходныйФайл, ПараметрыЗапроса); 
	Если РезультатРаботыЗапроса.Результат Тогда
		ИсхМассивУслуг = УправлениеБТВызовСервера.ИзJSON(РезультатРаботыЗапроса.ВхОбъект, Ложь);
	КонецЕсли;
	
	ТестоваяСтруктура = Новый Структура("Услуга, ПолныйМассивУслуг", СтруктураУслуги, ИсхМассивУслуг);	
	ТестовыйJSON = УправлениеБТВызовСервера.ВJSON(ТестоваяСтруктура);
	
	ТестовыйJSON = УправлениеБТВызовСервера.ДобавитьТабыВJSON(ТестовыйJSON);
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьJSONДляНастройки(Команда)
	ПолучитьJSONДляНастройкиНаСервере();
КонецПроцедуры

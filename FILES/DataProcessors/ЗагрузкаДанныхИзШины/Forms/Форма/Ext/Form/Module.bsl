

&НаСервере
Процедура ЗаполнитьОшибкиЗагрузки(Знач ВхТаблица);
	
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВхТаблица", ОбъектСервер.ФайлыДляЗагрузки.Выгрузить());
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВхТаблица.ИмяФайла КАК ИмяФайла,
	               |	ВхТаблица.ДатаФайла КАК ДатаФайла,
	               |	ВхТаблица.md5 КАК md5
	               |ПОМЕСТИТЬ ВхТаблица
	               |ИЗ
	               |	&ВхТаблица КАК ВхТаблица
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВхТаблица.ИмяФайла КАК ИмяФайла,
	               |	ВхТаблица.ДатаФайла КАК ДатаФайла,
	               |	ВхТаблица.md5 КАК md5,
	               |	ОчередьОбменов.ОписаниеОшибки КАК ОписаниеОшибки,
	               |	ОчередьОбменов.ЗавершенСОшибкой КАК Заблокирован
	               |ИЗ
	               |	ВхТаблица КАК ВхТаблица
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОчередьОбменов КАК ОчередьОбменов
	               |		ПО ВхТаблица.md5 = ОчередьОбменов.MD5
	               |			И (ОчередьОбменов.ТипОбмена = ЗНАЧЕНИЕ(Перечисление.ТипыОбменов.Импорт))";
	ТЗ = Запрос.Выполнить().Выгрузить();
	ОбъектСервер.ФайлыДляЗагрузки.Загрузить(ТЗ);
	ЗначениеВРеквизитФормы(ОбъектСервер, "Объект");
	
КонецПроцедуры


&НаКлиенте
Процедура ЗагрузитьСписок(Команда)
	ОбъектЖСОН = УправлениеБТВызовСервера.ЗагрузитьСписокНаСервере(Объект.Сервер, Объект.ДатаВремя, Объект.Загрузка);
	Объект.ФайлыДляЗагрузки.Очистить();
	Список = Новый Массив;
	Если ТипЗнч(ОбъектЖСОН) = Тип("Структура") И ОбъектЖСОН.Свойство("fileslist", Список) Тогда
		Для Каждого ЭлементСписка ИЗ Список Цикл 
			НоваяСтрока = Объект.ФайлыДляЗагрузки.Добавить();
			НоваяСтрока.ИмяФайла = Формат(ЭлементСписка.filename,"ЧРД=.; ЧГ=");
			НоваяСтрока.ДатаФайла = Формат(ЭлементСписка.filedate,"ЧРД=.; ЧГ=");
			НоваяСтрока.md5 = ЭлементСписка.filemd5;
			
		КонецЦикла;
	ИначеЕсли ТипЗнч(ОбъектЖСОН) = Тип("Структура") И ОбъектЖСОН.Свойство("message", Список) Тогда
		Для Каждого ЭлементСписка ИЗ Список Цикл 
			НоваяСтрока = Объект.ФайлыДляЗагрузки.Добавить();
			НоваяСтрока.ИмяФайла = Формат(ЭлементСписка,"ЧРД=.; ЧГ=");
		КонецЦикла;
	КонецЕсли;
	
	ЗаполнитьОшибкиЗагрузки(Объект.ФайлыДляЗагрузки);
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьФайл(Команда)
	
	Для Каждого СтрокаСБилетом ИЗ Объект.ФайлыДляЗагрузки Цикл 
		ВхОбъект = УправлениеБТВызовСервера.ЗагрузитьФайлНаСервере(Объект.Сервер, Объект.Загрузка, СтрокаСБилетом.ИмяФайла);
		Результат = УправлениеБТВызовСервера.ЗагрузитьДанныеВУслугу(ВхОбъект, Неопределено, Объект.Загрузка);
		Если ТипЗнч(Результат) = Тип("Структура") Тогда
			Если Результат.Результат Тогда
				УправлениеБТВызовСервера.ОтметитьЧтоФайлЗагружен(Объект.Сервер, Объект.Загрузка, СтрокаСБилетом.ИмяФайла);
			КонецЕсли;
		Иначе
			УправлениеБТВызовСервера.ОтметитьЧтоФайлЗагружен(Объект.Сервер, Объект.Загрузка, СтрокаСБилетом.ИмяФайла);
		КонецЕсли;
		//УправлениеБТВызовСервера.ОтметитьЧтоФайлЗагружен(Объект.Сервер, Объект.Загрузка, СтрокаСБилетом.ИмяФайла);	
	КонецЦикла;
	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Объект.Сервер = УправлениеБТВызовСервера.ИдентификаторБД();
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьТекущийФайл(Команда)
	// Вставить содержимое обработчика.
	Строка = ЭтаФорма.Элементы.ФайлыДляЗагрузки.ТекущиеДанные;
	ВхОбъект = УправлениеБТВызовСервера.ЗагрузитьФайлНаСервере(Объект.Сервер, Объект.Загрузка, Строка.ИмяФайла);
	Результат = УправлениеБТКлиент.ЗагрузитьОбъектВУслугу(Неопределено, ВхОбъект, Объект.Загрузка);
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		Если Результат.Результат Тогда
			УправлениеБТВызовСервера.ОтметитьЧтоФайлЗагружен(Объект.Сервер, Объект.Загрузка, Строка.ИмяФайла);
		КонецЕсли;
	Иначе
		УправлениеБТВызовСервера.ОтметитьЧтоФайлЗагружен(Объект.Сервер, Объект.Загрузка, Строка.ИмяФайла);
	КонецЕсли;
	
КонецПроцедуры



&НаКлиенте
Процедура ФайлыДляЗагрузкиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Строка = ЭтаФорма.Элементы.ФайлыДляЗагрузки.ТекущиеДанные;
	ВхОбъект = УправлениеБТВызовСервера.ЗагрузитьФайлНаСервере(Объект.Сервер, Объект.Загрузка, Строка.ИмяФайла);
	
	ТД = Новый ТекстовыйДокумент;
	ТД.УстановитьТекст(ВхОбъект);
	ТД.Показать(Строка.ИмяФайла);
КонецПроцедуры



&НаКлиенте
Процедура ОткрытьПесочничу(Команда)
	// Вставить содержимое обработчика.
	Строка = ЭтаФорма.Элементы.ФайлыДляЗагрузки.ТекущиеДанные;
	ВхОбъект = УправлениеБТВызовСервера.ЗагрузитьФайлНаСервере(Объект.Сервер, Объект.Загрузка, Строка.ИмяФайла);
	
	ПараметрыФормы = Новый Структура("ИсходныйФайл, НастрокаЗагрузки, СерверШины");
	ПараметрыФормы.ИсходныйФайл = ВхОбъект;
	ПараметрыФормы.НастрокаЗагрузки = Объект.Загрузка;
	ПараметрыФормы.СерверШины = УправлениеБТВызовСервера.ПолучитьРеквизит(Объект.Загрузка, "СерверШины");
	ФормаПесочницы = ОткрытьФорму("Обработка.ПесочницаЗагрузок.Форма.Форма", ПараметрыФормы);
	
КонецПроцедуры





&НаСервереБезКонтекста
Функция ФайлыДляЗагрузкиПриАктивизацииСтрокиНаСервере(md5)
	
	ПолучитьКлюч = Неопределено;
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("MD5", md5);
	Запрос.УстановитьПараметр("ТипОбмена", Перечисления.ТипыОбменов.Импорт);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ОчередьОбменов.MD5 КАК MD5,
	               |	ОчередьОбменов.ТипОбмена КАК ТипОбмена,
	               |	ОчередьОбменов.ДатаРегистрации КАК ДатаРегистрации,
	               |	ОчередьОбменов.ЗавершенСОшибкой КАК ЗавершенСОшибкой,
	               |	ОчередьОбменов.ДатаПоследнегоОбмена КАК ДатаПоследнегоОбмена,
	               |	ОчередьОбменов.ОписаниеОшибки КАК ОписаниеОшибки,
	               |	ОчередьОбменов.ОтладочнаяИнформация КАК ОтладочнаяИнформация,
	               |	ОчередьОбменов.ВидОбмена КАК ВидОбмена
	               |ИЗ
	               |	РегистрСведений.ОчередьОбменов КАК ОчередьОбменов
	               |ГДЕ
	               |	ОчередьОбменов.MD5 = &MD5
	               |	И ОчередьОбменов.ТипОбмена = &ТипОбмена";
	Выборка = Запрос.Выполнить().Выгрузить();
	Выборка = УправлениеБТВызовСервера.ТаблицаВМассив(Выборка);
	Если Выборка.Количество()>0 Тогда 
		ПолучитьКлюч = Выборка[0];	
	КонецЕсли;
	
	Если ПолучитьКлюч = Неопределено Тогда
		ПолучитьКлюч = Новый Структура("MD5, ТипОбмена, ДатаРегистрации, ЗавершенСОшибкой, ДатаПоследнегоОбмена, ОписаниеОшибки, ОтладочнаяИнформация, ВидОбмена");	
	КонецЕсли;
	
	Возврат ПолучитьКлюч;
КонецФункции

&НаКлиенте
Процедура ФайлыДляЗагрузкиПриАктивизацииСтроки(Элемент)
	
	Строка = ЭтаФорма.Элементы.ФайлыДляЗагрузки.ТекущиеДанные;
	Если Строка <> Неопределено Тогда
		ПолучитьКлюч = ФайлыДляЗагрузкиПриАктивизацииСтрокиНаСервере(Строка.md5);
		ЗаполнитьЗначенияСвойств(ЗначениеОшибки, ПолучитьКлюч);
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура СнятьСБлокировкиНаСервере(md5)
	
	МЗ = РегистрыСведений.ОчередьОбменов.СоздатьМенеджерЗаписи();
	МЗ.MD5 = md5;
	МЗ.ТипОбмена = Перечисления.ТипыОбменов.Импорт;
	МЗ.Прочитать();
	Если МЗ.Выбран() Тогда
		МЗ.Удалить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьСБлокировки(Команда)
	
	Строка = ЭтаФорма.Элементы.ФайлыДляЗагрузки.ТекущиеДанные;
	Если Строка <> Неопределено Тогда
		СнятьСБлокировкиНаСервере(Строка.md5);	
		
		ПолучитьКлюч = ФайлыДляЗагрузкиПриАктивизацииСтрокиНаСервере(Строка.md5);
		ЗаполнитьЗначенияСвойств(ЗначениеОшибки, ПолучитьКлюч);
		Строка.Заблокирован = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьБлокировкуНаСервере(md5)
	
	МЗ = РегистрыСведений.ОчередьОбменов.СоздатьМенеджерЗаписи();
	МЗ.MD5 = md5;
	МЗ.ТипОбмена = Перечисления.ТипыОбменов.Импорт;
	МЗ.ДатаРегистрации = ТекущаяДата();
	МЗ.ДатаПоследнегоОбмена = ТекущаяДата();
	МЗ.ЗавершенСОшибкой = Истина;
	МЗ.ОписаниеОшибки = "Ручная блокировка!";
	МЗ.ВидОбмена = Объект.Загрузка;
	МЗ.Записать(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьБлокировку(Команда)
	Строка = ЭтаФорма.Элементы.ФайлыДляЗагрузки.ТекущиеДанные;
	Если Строка <> Неопределено Тогда
		УстановитьБлокировкуНаСервере(Строка.md5);	
		
		ПолучитьКлюч = ФайлыДляЗагрузкиПриАктивизацииСтрокиНаСервере(Строка.md5);
		ЗаполнитьЗначенияСвойств(ЗначениеОшибки, ПолучитьКлюч);
		Строка.Заблокирован = Истина;
	КонецЕсли;
КонецПроцедуры
